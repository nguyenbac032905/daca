{
    "title": "8 mẹo SQL giúp bạn tối ưu truy vấn và tiết kiệm thời gian",
    "image": "https://tek4.vn/public_files/4c8be50b-b952-4a29-a18b-bd17df1d712b",
    "intro": "Có một vài lời khuyên giúp bạn thao tác dễ dàng hơn hoặc chí ít tiết kiệm thời gian hàng ngày. Chúng có thể đơn giản hoặc phức tạp nhưng đều rất tiện dụng.",
    "sections": [
      {
        "heading": "1. Tìm kiếm các hàng lặp lại theo tên cột",
        "desc": "Sử dụng GROUP BY và HAVING để xác định các giá trị bị trùng trong cột.",
        "code": "select column_name, count(column_name)\n  from table\ngroup by column_name\nhaving count (column_name) > 1;"
      },
      {
        "heading": "2. Hiển thị các chỉ mục của một lược đồ cơ sở dữ liệu",
        "desc": "Dễ dàng liệt kê các chỉ mục và bảng liên quan với điều kiện owner.",
        "code": "select TABLE_NAME, count(*)\n  from all_indexes\nwhere owner = 'OWNER_NAME' or table_owner = 'TABLE_OWNER'\ngroup by TABLE_NAME\norder by TABLE_NAME;"
      },
      {
        "heading": "3. Hiển thị N truy vấn có giá trị nhất",
        "desc": "Tìm các câu truy vấn tốn nhiều CPU nhất để tối ưu hóa.",
        "code": "select \n     st.TEXT AS QueryName,          \n     wt.execution_count AS ExecutionCount,\n     wt.total_worker_time/1000000 AS TotalCpuTimeInSeconds,\n     wt.total_worker_time/wt.execution_count/1000 AS AverageCpuTimeInMs,\n     qp.query_plan,\n     DB_NAME(st.dbid) AS [Database Name]\nfrom \n    (select top 10 \n          qs.execution_count,\n          qs.total_worker_time\n     from sys.dm_exec_query_stats qs\n     order by qs.total_worker_time desc) wt\ncross apply sys.dm_exec_sql_text(plan_handle) st\ncross apply sys.dm_exec_query_plan(plan_handle) qp\norder by wt.total_worker_time desc;"
      },
      {
        "heading": "4. Cho biết liệu một chỉ mục có được sử dụng hay không",
        "desc": "Kích hoạt theo dõi chỉ mục và tra cứu bằng v$object_usage.",
        "code": "ALTER INDEX INDEX_NAME MONITORING USAGE;\n-- sau một thời gian:\nselect * from v$object_usage view;"
      },
      {
        "heading": "5. Sử dụng count(1) thay vì count(*)",
        "desc": "count(1) có thể nhanh hơn count(*) trong một số trường hợp lớn.",
        "code": "--BETTER\nselect count(1) from big_table;\n\n--WORSE\nselect count(*) from big_table;"
      },
      {
        "heading": "6. Điều kiện với CASE WHEN",
        "desc": "CASE WHEN giúp viết điều kiện như IF-ELSE trong SQL.",
        "code": "select column1, column2,\n       case when price >= 100 then '1'\n            when price between 90 and 99 then '2'\n            else 'Other case' end price_type\nfrom table"
      },
      {
        "heading": "7. Common Table Expressions (CTE)",
        "desc": "CTE giúp truy vấn con rõ ràng, dễ đọc, dễ tái sử dụng.",
        "code": "--WORSE\nselect *\n  from other_table\nwhere name in (select name from table where condition1 < 1000)\n\n--BETTER\nwith CTE_NAME as (\n  select name from table where condition1 < 1000\n)\nselect * from other_table where name in (select name from CTE_NAME)"
      },
      {
        "heading": "8. OVER và PARTITION BY",
        "desc": "Dùng OVER() để tính tổng hoặc giá trị nhóm mà không phải GROUP BY toàn bộ.",
        "code": "--OVER\nselect SUM(column1) OVER () AS sum1, column2 from table1\n\n--OVER PARTITION\nselect SUM(column1) OVER (PARTITION BY client) AS sum1, column2 from table1"
      }
    ],
    "outro": "Chúng tôi đã tóm tắt một tập hợp nhỏ các đoạn mã SQL hữu ích giúp tiết kiệm thời gian hoặc nâng cao hiệu suất. Hy vọng bạn thấy hữu ích!"
  }
  